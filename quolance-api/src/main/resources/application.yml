app:
  application-name: Quolance
  base-url: "https://api.quolance.com"
  ui-url: "https://quolance.com"
  allowed-origins: "http://localhost"
  login-page-url: "${app.ui-url}/auth/login"
  login-success-url: "${app.ui-url}/auth/login-success"
  verify-email-url: "${app.ui-url}/auth/verify-email"
  reset-password-url: "${app.ui-url}/auth/reset-password"


  admin:
    email: ${ADMIN_EMAIL}
    password: ${ADMIN_PASSWORD}

spring:
  profiles:
    default: default

  application:
    name: quolance-api

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 20MB

  config:
    import: "optional:file:../.env[.properties]"

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: "${GITHUB_CLIENT_ID}"
            client-secret: "${GITHUB_CLIENT_SECRET}"
          google:
            client-id: "${GOOGLE_CLIENT_ID}"
            client-secret: "${GOOGLE_CLIENT_SECRET}"
            scope: profile, email

  datasource:
    url: ${PROD_DATASOURCE_URL}
    hikari:
      auto-commit: false

  jpa:
    hibernate:
      ddl-auto: ${DB_DDL_AUTO}
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc.lob.non_contextual_creation: true
    database: postgresql

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS_ENABLE}
        transport:
          protocol: ${MAIL_TRANSPORT_PROTOCOL}

org:
  jobrunr:
    background-job-server:
      enabled: true
    dashboard:
      enabled: true

logging:
  file:
    name: ${LOG_FILE}
  level:
    root: INFO
    org.springframework.web.socket: DEBUG
    org.springframework.messaging: DEBUG
    com.quolance: DEBUG
    org.springframework.web: ERROR
    com.quolance.quolance_api.services.auth.impl: DEBUG

server:
  port: 8081
  ssl:
    enable: true
    port: 443
    key-store: /etc/ssl/private/keystore.p12
    key-store-password: ${SSL_CERT_PASSWORD}
    key-store-type: PKCS12
    key-alias: tomcat
  error:
    include-message: always

cloudinary:
  cloud_name: ${CLOUDINARY_CLOUD_NAME}
  api_key: ${CLOUDINARY_API_KEY}
  api_secret: ${CLOUDINARY_API_SECRET}

google:
  api:
    key: ${GOOGLE_API_KEY}
    model: ${MODEL_NAME}
    embeddingModelName: ${EMBEDDING_MODEL_NAME}

ai:
  base-prompts:
    about: >
      Write a compelling "About Me" section for a freelancer, using no more than 2000 characters.
      This text should be appealing to potential clients, highlighting key skills, relevant experience, and professional background.
      Avoid any Markdown formatting. Limit your response to one or two paragraphs.
      Here is some additional context:
    project: >
      Craft a creative project description that freelancers can read to quickly understand the project's requirements, scope, and benefits.
      Use no more than 5000 characters, do not include any Markdown formatting, and limit the response to a maximum of two paragraphs.
      Additional info:
    application: >
      Write a motivational letter for a project application, using no more than 500 words.
      Avoid any Markdown formatting. You may include key points from the project's details to demonstrate relevance.
      Additional context:
