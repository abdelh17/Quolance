name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  frontend-build-test:
    name: Build, Test, and Analyze Frontend
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Install Dependencies
      - name: Install Dependencies
        run: |
          cd quolance-ui
          npm install

      # Step 3: Run Cypress Tests in Headless Mode
      - name: Run Cypress Tests (Headless)
        run: |
          cd quolance-ui
          npm run e2e:headless

      # Step 4: Generate Code Coverage Summary
      - name: Generate Code Coverage Summary
        run: |
          cd quolance-ui
          npm run code:coverage:summary

      # Step 5: Extract Coverage Percentage
      - name: Extract Coverage Percentage
        run: |
          cd quolance-ui
          ts-node extract-coverage-pct.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}

      # Step 6: Run SonarScanner with npx
      - name: Run SonarScanner
        run: |
          cd quolance-ui
          npx sonarqube-scanner \
            -Dsonar.organization=abdelh17 \
            -Dsonar.projectKey=abdelh17_Quolance_ui \
            -Dsonar.sources=. \
            -Dsonar.tests=cypress/e2e \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.exclusions=cypress/e2e/**,**/node_modules/** \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  backend-build-test:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: test

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: quolance-postgres-db
        ports:
          - 5434:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up JDK for Spring Boot
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build, Test, and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          gpg --batch --yes --passphrase "${{ secrets.ENV_PASSPHRASE }}" --decrypt --output .env .env.gpg
          cd quolance-api
          ./mvnw clean verify sonar:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=abdelh17 \
            -Dsonar.projectKey=abdelh17_Quolance_api \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
