name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  frontend-build-test:
    name: Build, Test, and Run E2E for Frontend
    runs-on: ubuntu-latest

    steps:
      # Step 0: Checkout Code
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 1: Install Dependencies
      - name: Install Dependencies
        run: |
          cd quolance-ui
          npm install

      # Step 2: Override .gitignore to include coverage and .nyc_output
      - name: Allow Coverage Files in CI/CD
        run: |
          cd quolance-ui
          echo "!/coverage" >> .gitignore
          echo "!/.nyc_output" >> .gitignore

      # Step 3: Run Cypress Tests in Headless Mode with Coverage
      - name: Run Cypress Tests in Headless Mode with Coverage
        run: |
          cd quolance-ui
          npm run e2e:headless

      # Step 4: Verify Coverage Files Exist
      - name: Verify Coverage Files
        run: |
          cd quolance-ui
          ls -l coverage
          ls -l .nyc_output

      # Step 5: Build Frontend
      - name: Build Frontend
        run: |
          cd quolance-ui
          npm run build

      # Step 6: SonarCloud Scan for Frontend
      - name: SonarCloud Scan Frontend
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: quolance-ui
          args: >
            -Dsonar.organization=abdelh17
            -Dsonar.projectKey=abdelh17_Quolance_ui
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.host.url=https://sonarcloud.io

  backend-build-test:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    env:
      MAILPIT_SMTP_PORT: "1025"
      DB_DDL_AUTO: "create"
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_API_ENV_VAR: ${{ secrets.CLOUDINARY_API_ENV_VAR }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up JDK for Spring Boot
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Build, Test, and Analyze Backend
      - name: Build, Test, and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd quolance-api
          ./mvnw clean verify sonar:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=abdelh17 \
            -Dsonar.projectKey=abdelh17_Quolance_api \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

